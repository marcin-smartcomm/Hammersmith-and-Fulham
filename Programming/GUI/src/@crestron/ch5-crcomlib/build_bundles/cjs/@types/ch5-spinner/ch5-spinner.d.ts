import { Ch5Common } from "../ch5-common/ch5-common";
import { Ch5SpinnerTemplate } from "./ch5-spinner-template";
import { Ch5SpinnerScroll } from "./ch5-spinner-scroll";
import { Ch5SpinnerEvents } from "./ch5-spinner-events";
import { TCh5CommonInputFeedbackModes } from '../_interfaces/ch5-common-input/types';
import { TCh5SpinnerIconPosition } from '../_interfaces/ch5-spinner/types';
import HtmlCallback from "../ch5-common/utils/html-callback";
import { ICh5SpinnerAttributes } from '../_interfaces/ch5-spinner';
export declare class Ch5Spinner extends Ch5Common implements ICh5SpinnerAttributes {
    static primaryCssClass: string;
    static cssClassPrefix: string;
    static VISIBLEITEMSCROLL: number;
    static SYNCTIMEOUT: number;
    static ICONPOSITIONS: TCh5SpinnerIconPosition[];
    static FEEDBACKMODES: TCh5CommonInputFeedbackModes[];
    private static MAX_SIZE;
    private _size;
    private _iconPosition;
    private _selectedValue;
    private _itemHeight;
    private _visibleItemScroll;
    private _resize;
    private _endless;
    private _feedbackMode;
    private _signalValueSyncTimeout;
    private _indexId;
    private _label;
    private _receiveStateValue;
    private _receiveStateSize;
    private _receiveStateUrl;
    private _sendEventOnFocus;
    private _sendEventOnChange;
    private _sendEventOnOverflow;
    private _sendEventOnUnderflow;
    private _autoSetItemHeight;
    private _templateHelper;
    private _scrollHelper;
    private _eventsHelper;
    private _selectedItem;
    private _cleanItem;
    private _receiveStateValueSub;
    _receiveStateLabelSub: string;
    private _receiveStateSizeSub;
    private _receiveStateLabel;
    private _onclean;
    private _ondirty;
    private _wasInstantiated;
    dirtyFlag: boolean;
    static readonly observedAttributes: string[];
    private _mutationObserver;
    constructor();
    connectedCallback(): void;
    initSignals(): void;
    dirtyTimeHandler(): void;
    disconnectedCallback(): void;
    unsubscribeFromSignals(): void;
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    addAriaAttributes(): void;
    ondirty: HtmlCallback | {};
    onclean: HtmlCallback | {};
    templateHelper: Ch5SpinnerTemplate;
    scrollHelper: Ch5SpinnerScroll;
    eventsHelper: Ch5SpinnerEvents;
    selectedItem: HTMLElement;
    cleanItem: number;
    receiveStateValueSub: string;
    receiveStateSizeSub: string;
    wasInstantiated: boolean;
    registerReceiveSignalValue(): void;
    registerReceiveSignalLabel(): void;
    registerReceiveSignalSize(): void;
    repaint(): void;
    submit(): void;
    reset(): void;
    getValue(): number;
    setValue(value: number): void;
    getDirty(): boolean;
    private adjustMaxSizeValue(size);
    size: number;
    iconPosition: TCh5SpinnerIconPosition;
    selectedValue: number;
    readonly selectedValueIndex: number;
    itemHeight: string;
    getItemHeightValue(): number;
    getItemHeightMeasurementUnit(): string;
    visibleItemScroll: number;
    resize: boolean;
    endless: boolean;
    indexId: string;
    receiveStateValue: string;
    receiveStateSize: string;
    receiveStateLabel: string;
    receiveStateUrl: string;
    sendEventOnFocus: string;
    sendEventOnChange: string;
    sendEventOnOverflow: string;
    sendEventOnUnderflow: string;
    feedbackMode: TCh5CommonInputFeedbackModes;
    signalValueSyncTimeout: number;
    label: string;
    autoSetItemHeight: boolean;
    getHighlightOffsetValue(): number;
    getHighlightOffset(): string;
    initAttributes(): void;
    protected initUtilities(): void;
    protected dirtyHandler(): void;
    protected translateCallback(section: string): void;
}
