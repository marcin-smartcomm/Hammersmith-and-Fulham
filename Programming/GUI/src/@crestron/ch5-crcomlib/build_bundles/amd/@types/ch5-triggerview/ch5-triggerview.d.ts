import { Ch5Common } from "../ch5-common/ch5-common";
import { Ch5TriggerViewChild } from "./ch5-triggerview-child";
import { ICh5TriggerviewAttributes } from "../_interfaces/ch5-triggerview";
export declare type TactiveViewCallback = () => {};
export interface INormalisedPointerEvent {
    x: number;
    y: number;
    id: number;
    event: TouchEvent;
    targetElement: HTMLElement;
}
export declare class Ch5TriggerView extends Ch5Common implements ICh5TriggerviewAttributes {
    primaryCssClass: string;
    cssClassPrefix: string;
    private _activeViewCallback;
    private _swipeThreshold;
    private _activeView;
    private _slidesSlot;
    private _ariaSlot;
    private _ariaLiveRegion;
    private _sendEventShowChildIndexSigName;
    private _receiveStateShowChildIndexSigName;
    private _subReceiveStateShowChildIndexId;
    private _signalIsReceived;
    private slidesManager;
    private _nested;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    handleEvent(e: Event): void;
    previousViewChild(): void;
    nextViewChild(): void;
    setActiveViewChild(childView: Ch5TriggerViewChild): void;
    setActiveView(i: number): void;
    static readonly observedAttributes: string[];
    attributeChangedCallback(name: string, oldValue: string, newValue: string): void;
    unsubscribeFromSignals(): void;
    getSlidesAsArray(): NodeListOf<Element>;
    getCssClassDisabled(): string;
    activeViewCallback: TactiveViewCallback;
    activeView: number;
    getPlainActiveView(): number;
    readonly getSwiperSensitivity: number;
    setSwiperSensitivity(sensitivity: number): void;
    endless: boolean;
    gestureable: boolean;
    disableAnimation: boolean;
    sendEventShowChildIndex: string;
    receiveStateShowChildIndex: string;
    swipeThreshold: number;
    nested: boolean;
    protected initAttributes(): void;
    protected attachEventListeners(): void;
    protected removeEvents(): void;
    protected _updateSizeStyleProperties(): void;
    protected updateCssClasses(): void;
    protected generateListOfAllPossibleComponentCssClasses(): string[];
    computeTransitionByDistance(viewToLoad: number): number;
    private _sendValueForSelectSignal(value);
    private _onSlidesSlotChange();
    private _updateAriaLiveDom();
    private _disablePointerEventsWhenGestureable();
    private _enablePointerEventsWhenGestureable();
    private _updateChildrenDirAttr();
    private _upgradeProperty(prop);
}
