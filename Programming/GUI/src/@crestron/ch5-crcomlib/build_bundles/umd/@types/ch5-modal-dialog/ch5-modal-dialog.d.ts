import { Ch5OverlayPanel } from "../ch5-overlay-panel/index";
import { Ch5Signal } from "../ch5-core/index";
import { ICh5ModalDialogAttributes } from "../_interfaces/ch5-modal-dialog";
import { Ch5Button } from "../ch5-button/ch5-button";
export declare class Ch5ModalDialog extends Ch5OverlayPanel implements ICh5ModalDialogAttributes {
    primaryCssClass: string;
    cssClassPrefix: string;
    protected _elMask: HTMLElement;
    protected _elHeader: HTMLElement;
    protected _elPrompt: HTMLElement;
    protected _elPromptIcon: HTMLElement;
    protected _elPromptText: HTMLElement;
    protected _elFooter: HTMLElement;
    protected _elBtnOk: Ch5Button;
    protected _elBtnCancel: Ch5Button;
    protected _width: string;
    protected _height: string;
    protected _title: string;
    protected _mask: boolean;
    protected _maskStyle: string;
    protected _hideOkButton: boolean;
    protected _okButtonLabel: string;
    protected _okButtonIcon: string;
    protected _okButtonStyle: string;
    protected _hideCancelButton: boolean;
    protected _cancelButtonLabel: string;
    protected _cancelButtonIcon: string;
    protected _cancelButtonStyle: string;
    protected _prompt: string;
    protected _promptIcon: string;
    protected _sigNameSendOnOk: string;
    protected _sigSendOnOk: Ch5Signal<boolean> | null;
    protected _sigNameSendOnCancel: string;
    protected _sigSendOnCancel: Ch5Signal<boolean> | null;
    protected _btnOkDefaultLabelText: string;
    protected _btnCancelDefaultLabelText: string;
    private _okEvent;
    private _cancelEvent;
    private _crModalWasInstatiated;
    constructor();
    protected attachEventListeners(): void;
    protected removeEventListeners(): void;
    protected _rebindEventCallbacks(): void;
    protected _onOkClick(inEvent: Event): void;
    protected _onCancelClick(inEvent: Event): void;
    protected _parseSizeAttr(value: string): string;
    protected _clickedOnMask(inEvent: Event): boolean;
    protected _checkAndAttachMaskIfNeeded(): void;
    protected getTargetElementForCssClassesAndStyle(): HTMLElement;
    protected updatePosition(): void;
    protected updateForChangeInClosable(): void;
    protected updateForChangeInStretch(): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    static readonly observedAttributes: string[];
    getListOfAllPossibleComponentCssClasses(): string[];
    protected _initialize(): void;
    protected initAttributes(): void;
    protected generateListOfAllPossibleComponentCssClasses(): string[];
    protected updateCssClasses(): void;
    attributeChangedCallback(attr: string, oldValue: string, newValue: string): void;
    protected createInternalHtml(): void;
    protected adjustInternalHtmlStructure(): void;
    protected afterHandlingShow(): void;
    protected afterHandlingHide(): void;
    width: string;
    height: string;
    title: string;
    mask: boolean;
    maskStyle: string;
    hideOkButton: boolean;
    okButtonLabel: string;
    okButtonIcon: string;
    okButtonStyle: string;
    hideCancelButton: boolean;
    cancelButtonLabel: string;
    cancelButtonIcon: string;
    cancelButtonStyle: string;
    prompt: string;
    promptIcon: string;
    sendEventOnOk: string;
    sendEventOnCancel: string;
}
